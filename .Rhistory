g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
debug(ls)
ls
ls()
q
ubdebug(ls)
undebug(ls)
q
undebug(ls)
undebug()
ls
undebug(ls)
dir()
f3)
f(5)
cube <- function(x, n) {
x^3
}
cube(3)
pow <- function(x = 4, n = 3) {
x^n
}
pow()
library(datasets)
data(iris)
?iris
head(data)
head(iris)
apply(iris[, 1:4], 2, mean)
summary(iris)
view(iris)
View(iris)
View(mtcars)
View(iris)
tappy(iris$Sepal.Length,iris$Species,mean)
apply(iris$Sepal.Length,iris$Species,mean)
lapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
abs(mean(mtcars[mtcars$cyl==4,]$hp) - mean(mtcars[mtcars$cyl==8,]$hp))
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
debug(ls)
ls
q
Q
quit()
x =c(0,1,2,3,4,5,6)
x
sd(x)
x = c(100, 100, 100, 100, 100, 100, 101)
sd(x)
x = c(0,1,3,3,3,5,6)
sd(x)
x = c(0, 25, 50, 100, 125, 150, 1000)
sd(x)
sd(0, 25, 25, 25, 25, 25, 25)
sd(c())
sd(c(0, 25, 25, 25, 25, 25, 25))
sd(c(0, 100, 200, 300, 400, 500, 600))
sd(c(0,1,2,3,4,5,6))
sd(c(0,1,1,1,1,1,2))
rnorm(1000,m=100,sd=10)
plot(rnorm(1000,m=100,sd=10))
92/100
1-.92
load(url("http://bit.ly/dasi_gss_data"))
head(dasi_gss_data")
)
""
head("dasi_gss_data")
head(dasi_gss_data)
table(dasi_gss_data)
names(dasi_gss_data)
dasi_gss_data
load(url("http://bit.ly/dasi_gss_data"))
View(gss)
names(gss)
dbinom(92,100,prob=.9)
50 / 75
.5 /.75
.5/.75
pnorm(mean=3.45,SE=0.163)
?pnorm
pnorm(100,mean=3.45,sd=0.163)
pnorm(100,mean=3.6,sd=1.63)
pnorm(100,mean=3.6,sd=1.63)
quit()
?pnorm()
pnorm(100,mean=3.6,sd=1.63)
pnorm(3.6,mean-3.45,sd-1.63)
pnorm(3.6,mean=3.45,sd=1.3
)
pnorm(3.6,mean=3.45,sd=163)
pnorm(3.6,mean=3.45,sd=1.63)
z=0.92
pnorm(z)
1 -
pnorm(z)
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/ames.RData"))
names(ames)
tail(ames)
area = ames$Gr.Liv.Area
price = ames$SalePrice
summary(area)
samp0 = sample(area,50)
samp1 = sample(area,50)
hist(samp0)
hist(samp1)
hist(sample(area,100)
)
hist(sample(area,1000)
)
2930 *.03
?mean
mean(samp0)
mean(sample(aread,100))
mean(sample(area,100))
mean(sample(area,1000))
?hist
9.4 / sqrt(507)
9.2 /sqrt(30)
3/5
pnorm(.6,mean-21,sd=5)
pnorm(24,mean=21,sd=5)
qnorm(.90,21,5)
qnorm(.10,21,5)
choose(2,2)
choose(5,1)
choose(10,1)
choose(4,0)
(1-.262)
.262 * .738
sqrt(193)
dbinom(2,10,.56)
pnorm(.81)
1-.81
pnorm(.19)
pnrom(.81)
pnorm(.81)
1 - pnorm(.81)
1-pnorm(1.73)
2 *(1-pnorm(1.73))
10 - 9.51
.49 / 4.65
1 - pnorm(0.1053763)
pnorm(0.1053763)
4.65/40
.49 / 0.11625
pnorm(4.215054)
1 - 0.9999875
9.51 - 10
-0.49 / 0.11625
pnorm(-4.215054)
1 - pnorm(-4.215054)
90 /92
.09 * .9
.02 * .91
0.0182 + 0.081
0.081 / 0.0992
.9 * .02
10 * 1.35
4.62 / 40
9.51 - 10
-0.49 / 0.1155
pnorm(-4.242424)
1 - pnorm(abs(-4.242424)
)
pnorm(abs(-4.242424)
)
pnorm(abs(-4.242424))
10 - 95.1
10 - 9.51
.40 / 0.1155
4.62 / sqrt(40)
-0.49 / 0.7304861
pnorm(-0.6707862)
10 / 15
pnorm(.95)
pnorm(.5)
qnorm(.95)
qnorm(.8)
qnorm(.80)
qnorm(90)
qnorm(.90)
18 * 0.8416212
4 /  15.14918
15.14918 /4
.8 * 18
15.14918 / 4
3.787295 * 3.787295
qnorm(.20)
qnorm(.95)
pnorm(1.28)
1 - pnorm(.1)
quit()
n = 18
qt(.5 , df=17)
.5 / 2
pt(.5,df=17)
1 -  0.6882574
75 / 40.13
2.4/18
3.4 / 18
0.1888889 * 0.1888889
2.7 / 18
0.15 * 0.15
0.0225 + 0.03567902
sqrt(0.05817902)
3.4 * 3.4
11.56 / 18
2.7 * 2.7
/ 18
7.29 / 18
0.6422222 + 0.405
sqrt(1.047222)
0.05 / 10
10/14
?load
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/inference.Rdata"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/atheism.RData"))
inference(us12$response,est="proportional",type="ci",method="theoretical",succes="atheeist")
1/100
.05 / 0.01
1.96 * 5
.95 / .01
1.96 * 95
186.1 * 186.2
.05 / .01
.05 /0.001
50 * 1.96
98 * 98
.5 * .5
sqrt(0.25)
1.96 * .3 /.5
1.96 * 1.96 * .25
.03 * .03
0.9604 / (.03 * .03)
35 / 250
215 / 250
493 / 1037
514 / 1037
0.4754098 * 0.4956606
0.2356419 / 1037
596 / 1028
401 / 1026
0.5797665 * 0.3908382
401 / 1028
0.5797665 * 0.3900778
0.226154 / 1028
sqrt(0.0002199942 + 0.0002272342)
7/12
10/14
quit()
2 * (36.19 + 58.11)
quit()
120 * 120
1000 * 1000
1000 * 1000 +1000 * 1000
1,000,000 * 1,000,000
1000000 * 1000000
sqer(.36 (1-.36)/50)
sqrt(.36 * (1-.36)/50))
1. - .36
sqrt(.36 * .64 / 50)
9/12
1. - .3
sqrt(.3 * .7 / 50)
sqrt(92.16)
9.6 * 9.6
sqrt(.60)
states = read.csv("http://bit.ly/dasi_states")
pov_sle = lm(poverty - female_house, data=states)
head(states)
pov_slr=lm(poverty - female_house, data = states)
pov_slr=lm(poverty ~ female_house, data = states)
summary(pov_slr)
pov_mslr(poverty ~ female_house + white , data=states)
pov_mslr = lm(poverty ~ female_house + white , data=states))
132.57/480.25
pov_mslr = lm(poverty ~ female_house + white , data=states)
summary(pov_mslr)
anova(pov_mlsr)
anova(pov_mslr)
source("http://bit.ly/dasi_inference")
936/1293
0.7238979 * 440
962 / 1293
0.7440062 * 440
100 * .11
.11 * ( 1 - .11)
.0979 / 100
sqrt(0.000979)
.12(1-.12)
.12 * ) 1- .12)
.12 * ( 1- .12)
0.1056 / 2
0.1056 * 4
248.3  - 244.8.
248.3  - 244.8
(1 - .98) /2
qnorm(.98 + .01)
3.5 - 2.362
3.5 + 2.362
1952528 - 1627
1 / 5
sqrt(.2 ( 1 - .2))
sqrt(.2 * ( 1 - .2))
.2 * (1-.2)
.2 * ( 1 - .2 )
.16 / 3226
.24 * ( 1 - .24)
.1824 / 100
.2 * ( 1- .2)
.16 / 100
sqrt(3226 * .20 * (1 - .20))
22.71915 / sqrt(3226)
sqrt(.20 * ( 1 - .2 ) / 3226)
sqrt(.24 * ( 1 - .24) / 3226)
24  / 112
24 / 46
24 * 46
1104 / 625
112 * 46
5152 / 625
3819.99 / 15072.02
15072.02 - 3819.99
11252.03 / 15072.02
251 - 9
11252.03 / 242
15072.02 / 250
46.49599 / 60.28808
86400 / 60
86400 / 60 / 60
86400 * 365
a <- available,oackages()
a <- available.packages()
a
head(rownames(a,3))
install.package("slidify")
install.packages("slidify")
version
getwd()
setwd("datasciencecoursera/ExData_Plotting1")
source("LoadData.R")
source("Plit1.R")
source("Plot1.R")
Plot1()
library(read.csv.sql)
install.packages("sqldf")
library(sqldf)
source("LoadData.R")
source("Plot1.R")
Plot1()
Plot1()
source("LoadData.R")
source("Plot1.R")
Plot1()
source("LoadData.R")
source("Plot1.R")
Plot1()
source("Plot1.R")
Plot1()
dev.cur()
source("LoadData.R")
source("plot1.R")
plot1()
source("LoadData.R")
LoadData
LoadData()
source(LoadData.R)
source("LoadData.R")
LoadData()
source("LoadData.R")
source("plot1.R")
plot1()
plot1()
data <- LoadData()
head(data)
png("plot1.png", width=400, height=400)
hist(data$Global_active_power,
xlab="Global Active Power (kilowatts)",
ylab="Frequency",
col="red")
head(data)
data$Global_active_power
hist(data$Global_active_power)
histogram(data$Global_active_power)
x=rnorm(100, 0, 1)
hist(x)
dev.off()
hist(x)
hist(data$Global_active_power)
plot1()
source("plot1.R")
plot1()
png("plot1.png", width=400, height=400)
hist(data$Global_active_power,xlab="Global Active Power (kilowatts)",col="red")
dev.off()
dev.off()
hist(data$Global_active_power,xlab="Global Active Power (kilowatts)",col="red")
plot1()
source("plot1.R")
plot1()
source(plot2.R)
source("plot2.R")
plot2()
source("plot2.R")
plot2()
source("LoadData.R")
plot2()
plot2()
png("plot2.png", width=400, height=400)
plot(data$Time,data$Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$Time,data$Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=" ")
head(data)
tail(data)
data
source("LoadData.R")
source("plot2.R")
plot2()
?read.cvs.sql
?read.csv.sql
?fread
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
LoadData()
?fread
source("LoadData.R")
data <- LoadData()
head(data)
str(data)
summary(data)
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
data <- LoadData()
string(data)
str(data)
tail(data;10)
tail(data)
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
plot2()
source("LoadData.R")
> plot2()
source("LoadData.R")
plot2()
source("LoadData.R")
source("LoadData.R")
plot2()
source("LoadData.R")
plot2()
Data <- LoadData()
Data <- LoadData()
source("load_data.R")
mydata <- load_data()
source("load_data.R")
mydata <- load_data()
dir()
source("load_data.R")
mydata <- load_data()
